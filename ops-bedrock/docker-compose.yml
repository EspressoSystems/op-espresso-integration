version: '3.4'

# This Compose file is expected to be used with the devnet-up.sh script.
# The volumes below mount the configs generated by the script into each
# service.

volumes:
  l1_data:
  op1_l2_data:
  op1_log:
  op2_l2_data:
  op2_log:
  op1_blockscout_db:
  op1_blockscout_logs:
  op1_blockscout_redis:
  op2_blockscout_db:
  op2_blockscout_logs:
  op2_blockscout_redis:

services:
  ##################################################################################################
  # L1
  #

  l1:
    image: ghcr.io/espressosystems/op-espresso-integration/l1:integration
    build:
      context: .
      dockerfile: Dockerfile.l1
    ports:
      - "8545:8545"
      - "8546:8546"
      - "7060:6060"
    volumes:
      - "l1_data:/db"
      - "${DEVNET_DIR}/genesis-l1.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"

  ##################################################################################################
  # OP stack 901
  #

  op1-l2:
    image: ghcr.io/espressosystems/op-espresso-integration/l2:integration
    build:
      context: .
      dockerfile: Dockerfile.l2
    ports:
      - "$OP1_L2_RPC_PORT:8545"
      - "$OP1_L2_DEBUG_PORT:6060"
    volumes:
      - "op1_l2_data:/db"
      - "${DEVNET_DIR}/genesis-l2.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
    entrypoint:
      # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - "/bin/sh"
      - "/entrypoint.sh"
      - "--authrpc.jwtsecret=/config/test-jwt-secret.txt"

  op1-node:
    image: ghcr.io/espressosystems/op-espresso-integration/op-node:integration
    depends_on:
      - l1
      - op1-l2
    build:
      context: ../
      dockerfile: ./op-node/Dockerfile
    command: >
      op-node
      --l1=ws://l1:8546
      --l2=http://op1-l2:8551
      --l2.jwt-secret=/config/test-jwt-secret.txt
      --sequencer.enabled
      --sequencer.l1-confs=0
      --verifier.l1-confs=0
      --p2p.sequencer.key=8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.scoring.peers=light
      --p2p.ban.peers=true
      --snapshotlog.file=/op_log/snapshot.log
      --p2p.priv.path=/config/p2p-node-key.txt
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
      --rpc.enable-admin
    ports:
      - "$OP1_NODE_RPC_PORT:8545"
      - "$OP1_NODE_P2P_PORT:9003"
      - "$OP1_NODE_METRICS_PORT:7300"
      - "$OP1_NODE_DEBUG_PORT:6060"
    environment:
      - OP_NODE_ESPRESSO_URL=http://sequencer0:8080
    volumes:
      - "${PWD}/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt"
      - "${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
      - "${DEVNET_DIR}/rollup.json:/rollup.json"
      - op1_log:/op_log

  op1-proposer:
    image: ghcr.io/espressosystems/op-espresso-integration/op-proposer:integration
    depends_on:
      - l1
      - op1-l2
      - op1-node
    build:
      context: ../
      dockerfile: ./op-proposer/Dockerfile
    ports:
      - "$OP1_PROPOSER_DEBUG_PORT:6060"
      - "$OP1_PROPOSER_METRICS_PORT:7300"
    environment:
      OP_PROPOSER_L1_ETH_RPC: http://l1:8545
      OP_PROPOSER_ROLLUP_RPC: http://op1-node:8545
      OP_PROPOSER_POLL_INTERVAL: 1s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_MNEMONIC: test test test test test test test test test test test junk
      OP_PROPOSER_L2_OUTPUT_HD_PATH: "m/44'/60'/0'/0/1"
      OP_PROPOSER_L2OO_ADDRESS: "${L2OO_ADDRESS}"
      OP_PROPOSER_PPROF_ENABLED: "true"
      OP_PROPOSER_METRICS_ENABLED: "true"
      OP_PROPOSER_ALLOW_NON_FINALIZED: "true"

  op1-batcher:
    image: ghcr.io/espressosystems/op-espresso-integration/op-batcher:integration
    depends_on:
      - l1
      - op1-l2
      - op1-node
    build:
      context: ../
      dockerfile: ./op-batcher/Dockerfile
    ports:
      - "$OP1_BATCHER_DEBUG_PORT:6060"
      - "$OP1_BATCHER_METRICS_PORT:7300"
      - "$OP1_BATCHER_RPC_PORT:8545"
    environment:
      OP_BATCHER_L1_ETH_RPC: http://l1:8545
      OP_BATCHER_L2_ETH_RPC: http://op1-l2:8545
      OP_BATCHER_ROLLUP_RPC: http://op1-node:8545
      OP_BATCHER_MAX_CHANNEL_DURATION: 1
      OP_BATCHER_SUB_SAFETY_MARGIN: 4 # SWS is 15, ChannelTimeout is 40
      OP_BATCHER_POLL_INTERVAL: 1s
      OP_BATCHER_NUM_CONFIRMATIONS: 1
      OP_BATCHER_MNEMONIC: test test test test test test test test test test test junk
      OP_BATCHER_SEQUENCER_HD_PATH: "m/44'/60'/0'/0/2"
      OP_BATCHER_PPROF_ENABLED: "true"
      OP_BATCHER_METRICS_ENABLED: "true"
      OP_BATCHER_RPC_ENABLE_ADMIN: "true"
    # The batcher does not respond to sigint
    stop_grace_period: 1s

  op1-geth-proxy:
    image: ghcr.io/espressosystems/op-espresso-integration/op-geth-proxy:integration
    build:
      context: ../
      dockerfile: ./op-geth-proxy/Dockerfile
    ports:
      - "$OP1_GETH_PROXY_PORT:9090"
    environment:
      - OP_GETH_PROXY_GETH_ADDR=http://op1-l2:8545
      - OP_GETH_PROXY_LISTEN_ADDR=0.0.0.0:9090
      - OP_GETH_PROXY_SEQ_ADDR=http://sequencer0:8080
      - OP_GETH_PROXY_VM_ID=$OP1_CHAIN_ID
    extra_hosts:
      - "host.docker.internal:host-gateway"

  op1-faucet:
    image: ghcr.io/espressosystems/discord-faucet:main
    ports:
      - "$OP1_FAUCET_PORT:8111"
    environment:
      - ESPRESSO_DISCORD_FAUCET_NUM_CLIENTS=1
      - ESPRESSO_DISCORD_FAUCET_MNEMONIC=test test test test test test test test test test test junk
      - ESPRESSO_DISCORD_FAUCET_FIRST_ACCOUNT_INDEX=5
      - ESPRESSO_DISCORD_FAUCET_GRANT_AMOUNT_ETHERS=0.1
      - ESPRESSO_DISCORD_FAUCET_WEB3_PROVIDER_URL_HTTP=http://op1-geth-proxy:9090
      - ESPRESSO_DISCORD_FAUCET_POLL_INTERVAL=2s
      - RUST_LOG
    depends_on:
      - op1-geth-proxy

  artifact-server:
    depends_on:
      - l1
    image: nginx:1.25-alpine
    ports:
      - "8080:80"
    volumes:
      - "${DEVNET_DIR}/:/usr/share/nginx/html/:ro"
    security_opt:
      - "no-new-privileges:true"

  stateviz:
    image: ghcr.io/espressosystems/op-espresso-integration/stateviz:integration
    build:
      context: ../
      dockerfile: ./ops-bedrock/Dockerfile.stateviz
    command:
      - stateviz
      - -addr=0.0.0.0:8080
      - -snapshot=/op_log/snapshot.log
      - -refresh=10s
    ports:
      - "9090:8080"
    volumes:
      - op1_log:/op_log:ro

  ##################################################################################################
  # OP stack 901 block explorer
  #

  op1-blockscout-db:
    image: postgres:14
    restart: always
    command: postgres -c 'max_connections=200'
    environment:
        POSTGRES_PASSWORD: ''
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    ports:
      - "5432"
    volumes:
      - op1_blockscout_db:/var/lib/postgresql/data

  op1-redis-db:
    image: 'redis:alpine'
    ports:
      - "6379"
    command: redis-server
    volumes:
      - op1_blockscout_redis:/data

  op1-blockscout:
    depends_on:
      - op1-blockscout-db
      - op1-smart-contract-verifier
      - op1-redis-db
    image: ghcr.io/espressosystems/espresso-sequencer/blockscout:main
    pull_policy: always
    restart: always
    stop_grace_period: 5m
    links:
      - op1-blockscout-db:database
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    env_file:
      - ../blockscout/docker-compose/envs/common-blockscout.env
    environment:
        SUBNETWORK: 'OP Rollup 901'
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ETHEREUM_JSONRPC_HTTP_URL: http://op1-l2:8545/
        ETHEREUM_JSONRPC_TRACE_URL: http://op1-l2:8545/
        DATABASE_URL: postgresql://postgres:@op1-blockscout-db:5432/blockscout?ssl=false
        ACCOUNT_REDIS_URL: redis://op1-redis-db:6379
        MICROSERVICE_SC_VERIFIER_URL: http://op1-smart-contract-verifier:8050/
        MICROSERVICE_VISUALIZE_SOL2UML_URL: http://op1-visualizer:8050/
        MICROSERVICE_SIG_PROVIDER_URL: http://op1-sig-provider:8050/
        ECTO_USE_SSL: 'false'
        SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
        MIX_ENV: 'prod'
        INDEXER_CATCHUP_BLOCK_INTERVAL: '1s'
    ports:
      - "$OP1_BLOCKSCOUT_PORT:4000"
    volumes:
      - op1_blockscout_logs:/app/logs/

  op1-smart-contract-verifier:
    image: ghcr.io/blockscout/smart-contract-verifier:${SMART_CONTRACT_VERIFIER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    env_file:
      - ../blockscout/docker-compose/envs/common-smart-contract-verifier.env
    ports:
      - "$OP1_SMART_CONTRACT_VERIFIER_PORT:8050"

  op1-visualizer:
    image: ghcr.io/blockscout/visualizer:${VISUALIZER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    env_file:
      -  ../blockscout/docker-compose/envs/common-visualizer.env
    ports:
      - "$OP1_VISUALIZER_PORT:8050"

  op1-sig-provider:
    image: ghcr.io/blockscout/sig-provider:${SIG_PROVIDER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    ports:
      - "$OP1_SIG_PROVIDER_PORT:8050"

  ##################################################################################################
  # OP stack 902
  #

  op2-l2:
    image: ghcr.io/espressosystems/op-espresso-integration/l2:integration
    build:
      context: .
      dockerfile: Dockerfile.l2
    ports:
      - "$OP2_L2_RPC_PORT:8545"
      - "$OP2_L2_DEBUG_PORT:6060"
    volumes:
      - "op2_l2_data:/db"
      - "${DEVNET_DIR}/genesis-l2.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
    entrypoint:
      # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - "/bin/sh"
      - "/entrypoint.sh"
      - "--authrpc.jwtsecret=/config/test-jwt-secret.txt"

  op2-node:
    image: ghcr.io/espressosystems/op-espresso-integration/op-node:integration
    depends_on:
      - l1
      - op2-l2
    build:
      context: ../
      dockerfile: ./op-node/Dockerfile
    command: >
      op-node
      --l1=ws://l1:8546
      --l2=http://op2-l2:8551
      --l2.jwt-secret=/config/test-jwt-secret.txt
      --sequencer.enabled
      --sequencer.l1-confs=0
      --verifier.l1-confs=0
      --p2p.sequencer.key=8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.scoring.peers=light
      --p2p.ban.peers=true
      --snapshotlog.file=/op_log/snapshot.log
      --p2p.priv.path=/config/p2p-node-key.txt
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
      --rpc.enable-admin
    ports:
      - "$OP2_NODE_RPC_PORT:8545"
      - "$OP2_NODE_P2P_PORT:9003"
      - "$OP2_NODE_METRICS_PORT:7300"
      - "$OP2_NODE_DEBUG_PORT:6060"
    environment:
      - OP_NODE_ESPRESSO_URL=http://sequencer0:8080
    volumes:
      - "${PWD}/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt"
      - "${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
      - "${DEVNET_DIR}/rollup.json:/rollup.json"
      - op2_log:/op_log

  op2-proposer:
    image: ghcr.io/espressosystems/op-espresso-integration/op-proposer:integration
    depends_on:
      - l1
      - op2-l2
      - op2-node
    build:
      context: ../
      dockerfile: ./op-proposer/Dockerfile
    ports:
      - "$OP2_PROPOSER_DEBUG_PORT:6060"
      - "$OP2_PROPOSER_METRICS_PORT:7300"
    environment:
      OP_PROPOSER_L1_ETH_RPC: http://l1:8545
      OP_PROPOSER_ROLLUP_RPC: http://op2-node:8545
      OP_PROPOSER_POLL_INTERVAL: 1s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_MNEMONIC: test test test test test test test test test test test junk
      OP_PROPOSER_L2_OUTPUT_HD_PATH: "m/44'/60'/0'/0/5"
      OP_PROPOSER_L2OO_ADDRESS: "${L2OO_ADDRESS}"
      OP_PROPOSER_PPROF_ENABLED: "true"
      OP_PROPOSER_METRICS_ENABLED: "true"
      OP_PROPOSER_ALLOW_NON_FINALIZED: "true"

  op2-batcher:
    image: ghcr.io/espressosystems/op-espresso-integration/op-batcher:integration
    depends_on:
      - l1
      - op2-l2
      - op2-node
    build:
      context: ../
      dockerfile: ./op-batcher/Dockerfile
    ports:
      - "$OP2_BATCHER_DEBUG_PORT:6060"
      - "$OP2_BATCHER_METRICS_PORT:7300"
      - "$OP2_BATCHER_RPC_PORT:8545"
    environment:
      OP_BATCHER_L1_ETH_RPC: http://l1:8545
      OP_BATCHER_L2_ETH_RPC: http://op2-l2:8545
      OP_BATCHER_ROLLUP_RPC: http://op2-node:8545
      OP_BATCHER_MAX_CHANNEL_DURATION: 1
      OP_BATCHER_SUB_SAFETY_MARGIN: 4 # SWS is 15, ChannelTimeout is 40
      OP_BATCHER_POLL_INTERVAL: 1s
      OP_BATCHER_NUM_CONFIRMATIONS: 1
      OP_BATCHER_MNEMONIC: test test test test test test test test test test test junk
      OP_BATCHER_SEQUENCER_HD_PATH: "m/44'/60'/0'/0/6"
      OP_BATCHER_PPROF_ENABLED: "true"
      OP_BATCHER_METRICS_ENABLED: "true"
      OP_BATCHER_RPC_ENABLE_ADMIN: "true"
    # The batcher does not respond to sigint
    stop_grace_period: 1s

  op2-geth-proxy:
    image: ghcr.io/espressosystems/op-espresso-integration/op-geth-proxy:integration
    build:
      context: ../
      dockerfile: ./op-geth-proxy/Dockerfile
    ports:
      - "$OP2_GETH_PROXY_PORT:9090"
    environment:
      - OP_GETH_PROXY_GETH_ADDR=http://op2-l2:8545
      - OP_GETH_PROXY_LISTEN_ADDR=0.0.0.0:9090
      - OP_GETH_PROXY_SEQ_ADDR=http://sequencer0:8080
      - OP_GETH_PROXY_VM_ID=$OP2_CHAIN_ID
    extra_hosts:
      - "host.docker.internal:host-gateway"

  op2-faucet:
    image: ghcr.io/espressosystems/discord-faucet:main
    ports:
      - "$OP2_FAUCET_PORT:8111"
    environment:
      - ESPRESSO_DISCORD_FAUCET_NUM_CLIENTS=1
      - ESPRESSO_DISCORD_FAUCET_MNEMONIC=test test test test test test test test test test test junk
      - ESPRESSO_DISCORD_FAUCET_FIRST_ACCOUNT_INDEX=5
      - ESPRESSO_DISCORD_FAUCET_GRANT_AMOUNT_ETHERS=0.1
      - ESPRESSO_DISCORD_FAUCET_WEB3_PROVIDER_URL_HTTP=http://op2-geth-proxy:9090
      - ESPRESSO_DISCORD_FAUCET_POLL_INTERVAL=2s
      - RUST_LOG
    depends_on:
      - op2-geth-proxy

  ##################################################################################################
  # OP stack 902 block explorer
  #

  op2-blockscout-db:
    image: postgres:14
    restart: always
    command: postgres -c 'max_connections=200'
    environment:
        POSTGRES_PASSWORD: ''
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    ports:
      - "5432"
    volumes:
      - op2_blockscout_db:/var/lib/postgresql/data

  op2-redis-db:
    image: 'redis:alpine'
    ports:
      - "6379"
    command: redis-server
    volumes:
      - op2_blockscout_redis:/data

  op2-blockscout:
    depends_on:
      - op2-blockscout-db
      - op2-smart-contract-verifier
      - op2-redis-db
    image: ghcr.io/espressosystems/espresso-sequencer/blockscout:main
    pull_policy: always
    restart: always
    stop_grace_period: 5m
    links:
      - op2-blockscout-db:database
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    env_file:
      - ../blockscout/docker-compose/envs/common-blockscout.env
    environment:
        SUBNETWORK: 'OP Rollup 902'
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ETHEREUM_JSONRPC_HTTP_URL: http://op2-l2:8545/
        ETHEREUM_JSONRPC_TRACE_URL: http://op2-l2:8545/
        DATABASE_URL: postgresql://postgres:@op2-blockscout-db:5432/blockscout?ssl=false
        ACCOUNT_REDIS_URL: redis://op2-redis-db:6379
        MICROSERVICE_SC_VERIFIER_URL: http://op2-smart-contract-verifier:8050/
        MICROSERVICE_VISUALIZE_SOL2UML_URL: http://op2-visualizer:8050/
        MICROSERVICE_SIG_PROVIDER_URL: http://op2-sig-provider:8050/
        ECTO_USE_SSL: 'false'
        SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
        MIX_ENV: 'prod'
        INDEXER_CATCHUP_BLOCK_INTERVAL: '1s'
    ports:
      - "$OP2_BLOCKSCOUT_PORT:4000"
    volumes:
      - op2_blockscout_logs:/app/logs/

  op2-smart-contract-verifier:
    image: ghcr.io/blockscout/smart-contract-verifier:${SMART_CONTRACT_VERIFIER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    env_file:
      - ../blockscout/docker-compose/envs/common-smart-contract-verifier.env
    ports:
      - "$OP2_SMART_CONTRACT_VERIFIER_PORT:8050"

  op2-visualizer:
    image: ghcr.io/blockscout/visualizer:${VISUALIZER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    env_file:
      -  ../blockscout/docker-compose/envs/common-visualizer.env
    ports:
      - "$OP2_VISUALIZER_PORT:8050"

  op2-sig-provider:
    image: ghcr.io/blockscout/sig-provider:${SIG_PROVIDER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    ports:
      - "$OP2_SIG_PROVIDER_PORT:8050"

  ##################################################################################################
  # Espresso Sequencer
  #

  orchestrator:
    image: ghcr.io/espressosystems/espresso-sequencer/orchestrator:main
    ports:
      - "8080"
    environment:
      - ESPRESSO_ORCHESTRATOR_PORT=8080
      - ESPRESSO_ORCHESTRATOR_NUM_NODES=2
      - ESPRESSO_ORCHESTRATOR_START_DELAY=1s
      - ESPRESSO_ORCHESTRATOR_NEXT_VIEW_TIMEOUT=10s
      - ESPRESSO_ORCHESTRATOR_MAX_PROPOSE_TIME=1s
      - RUST_LOG
    stop_grace_period: 1s

  da-server:
    image: ghcr.io/espressosystems/espresso-sequencer/web-server:main
    ports:
      - "8080"
    environment:
      - ESPRESSO_WEB_SERVER_PORT=8080
      - RUST_LOG=error
    depends_on:
      orchestrator:
        condition: service_healthy
    stop_grace_period: 1s

  consensus-server:
    image: ghcr.io/espressosystems/espresso-sequencer/web-server:main
    ports:
      - "8080"
    environment:
      - ESPRESSO_WEB_SERVER_PORT=8080
      - RUST_LOG=error
    depends_on:
      orchestrator:
        condition: service_healthy
    stop_grace_period: 1s

  commitment-task:
    image: ghcr.io/espressosystems/espresso-sequencer/commitment-task:main
    command: commitment-task --deploy
    environment:
    - ESPRESSO_SEQUENCER_URL=http://sequencer0:8080
    - ESPRESSO_SEQUENCER_L1_PROVIDER=http://l1:8545
    - ESPRESSO_SEQUENCER_ETH_MNEMONIC
    - ESPRESSO_SEQUENCER_HOTSHOT_ACCOUNT_INDEX=10
    - ESPRESSO_SEQUENCER_L1_USE_LATEST_BLOCK_TAG
    - RUST_LOG
    depends_on:
      sequencer0:
        condition: service_healthy
      l1:
        condition: service_started
    stop_grace_period: 1s

  sequencer0:
    image: ghcr.io/espressosystems/espresso-sequencer/sequencer:main
    ports:
      - "50000:8080"
    # Run the API server (with options taken from the environment) and the optional submission API
    command: sequencer -- http -- query -- submit
    environment:
      - ESPRESSO_SEQUENCER_ORCHESTRATOR_URL=http://orchestrator:8080
      - ESPRESSO_SEQUENCER_DA_SERVER_URL=http://da-server:8080
      - ESPRESSO_SEQUENCER_CONSENSUS_SERVER_URL=http://consensus-server:8080
      - ESPRESSO_SEQUENCER_API_PORT=8080
      - ESPRESSO_SEQUENCER_STORAGE_PATH=/store/sequencer
      - ESPRESSO_SEQUENCER_L1_PROVIDER
      - ESPRESSO_SEQUENCER_L1_USE_LATEST_BLOCK_TAG
      - RUST_LOG
    depends_on:
      orchestrator:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    stop_grace_period: 1s

  sequencer1:
    image: ghcr.io/espressosystems/espresso-sequencer/sequencer:main
    ports:
      - "8080"
    command: sequencer -- http -- query
    environment:
      - ESPRESSO_SEQUENCER_ORCHESTRATOR_URL=http://orchestrator:8080
      - ESPRESSO_SEQUENCER_DA_SERVER_URL=http://da-server:8080
      - ESPRESSO_SEQUENCER_CONSENSUS_SERVER_URL=http://consensus-server:8080
      - ESPRESSO_SEQUENCER_API_PORT=8080
      - ESPRESSO_SEQUENCER_STORAGE_PATH=/store/sequencer
      - ESPRESSO_SEQUENCER_L1_PROVIDER
      - ESPRESSO_SEQUENCER_L1_USE_LATEST_BLOCK_TAG
      - RUST_LOG
    depends_on:
      orchestrator:
        condition: service_healthy
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    stop_grace_period: 1s
